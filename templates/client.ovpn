client

# OpenVPN traffic on 443/tcp is almost never blocked because, since OpenVPN
# uses SSL, it's very hard to distinguish this traffic from "real" HTTPS
# traffic.
#
# Using udp as protocol is faster but many firewalls block it.
proto tcp
remote {{address}} {{port}}
# Compress packets with lzo. lz4 is more efficient, but it's not compatible
# with OpenVPN versions <2.4.
compress lzo
# tun has lower traffic overhead than tap.
dev tun

resolv-retry infinite
auth-retry none
nobind
persist-key
persist-tun
# Make sure we're speaking to the server and not another client
# Trying to man-in-the-middle us.
remote-cert-tls server
# TLS versions <1.2 are vulnerable to many attacks.
tls-version-min 1.2
# Prefer the strong AES-256-GCM cipher but also allow slightly weaker ciphers
# to have more compatibility. (Although those ciphers are still very secure.)
#
# More info:
# - https://community.openvpn.net/openvpn/wiki/DeprecatedOptions#Policy:Migratingawayfromdeprecatedciphers
# - https://openvpn.net/vpn-server-resources/faq-regarding-openvpn-connect-android/
# - https://www.privateinternetaccess.com/helpdesk/kb/articles/what-s-the-difference-between-aes-cbc-and-aes-gcm
# - https://fedoraproject.org/wiki/Changes/New_default_cipher_in_OpenVPN
cipher AES-256-GCM
ncp-ciphers AES-256-GCM:AES-256-CBC:AES-128-GCM
# Use SHA256 for auth since the default SHA1 is insecure. This setting will
# be ignored when GCM is used (which uses SHA384)
auth SHA256

verb 3
mute 20
mute-replay-warnings

# Certificate Authority cert
<ca>
{{ca -}}
</ca>
# Client cert
<cert>
{{cert -}}
</cert>
# Client private key 
<key>
{{key -}}
</key>

# PSK and direction of TLS channel authentication
<tls-auth>
{{tls_auth -}}
</tls-auth>
key-direction 1
